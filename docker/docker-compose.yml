services:
    nginx:
        container_name: "${APP_NAME:-kimi}_nginx"
        build: ./nginx
        ports:
            - "${NGINX_HTTP:-80}:80"
            - "${NGINX_HTTPS:-433}:433"
        networks:
            - backend
        links:
            - fpm
        volumes:
            - "${STORAGE_APP}:/var/www/html"
            - "${STORAGE_NGINX}/logs/:/var/log/nginx/"
            - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/config/sites-available/:/etc/nginx/sites-available/
            - ./nginx/config/sites-enabled/:/etc/nginx/sites-enabled/
            - ./nginx/config/nginxconfig.io/:/etc/nginx/nginxconfig.io/

    fpm:
        container_name: "${APP_NAME:-kimi}_fpm"
        build: ./fpm
        networks:
            - backend
        links:
            - mysql
        volumes:
            - "${STORAGE_APP}:/var/www/html"
            - "${STORAGE_FPM}/logs/fpm-php.www.log:/var/log/fpm-php.www.log:ro"
            - ./fpm/config/www.conf:/usr/local/etc/php-fom.d/www.conf

    mysql:
        container_name: "${APP_NAME:-kimi}_mysql"
        build:
            context: ./mysql
        restart: always
        networks:
            - backend
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
        volumes:
            - "${STORAGE_MYSQL}/data:/var/lib/mysql/"

    php:
        container_name: "${APP_NAME:-kimi}_php"
        build: ./php
        volumes:
            - "${STORAGE_APP}:/var/www/html"

    php-setup:
        container_name: "${APP_NAME:-kimi}_php-setup"
        build: ./php
        depends_on:
            - php
        networks:
            - backend
        links:
            - mysql
        restart: "no"
        entrypoint: ["bash", "/root/scripts/setup.sh"]
        volumes:
            - "${STORAGE_APP}:/var/www/html"

    adminer:
        image: adminer
        restart: always
        links:
            - mysql
        networks:
            - backend
        ports:
            - "${ADMINER_PORT}:8080"

networks:
    backend:
        driver: bridge
